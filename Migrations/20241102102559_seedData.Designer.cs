// <auto-generated />
using EFCoreBasicDemo.Infrastructure.MyEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreBasicDemo.Migrations
{
    [DbContext(typeof(EFCoreDemoContext))]
    [Migration("20241102102559_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreBasicDemo.Infrastructure.Models.Company", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CompanyCode");

                    b.Property<string>("CompanyCountry")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CompanyCountry");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CompanyTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CompanyTelephone");

                    b.HasKey("CompanyCode")
                        .HasName("CompanyCode");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyCode = "AC001",
                            CompanyCountry = "01064858999",
                            CompanyName = "Accenture",
                            CompanyTelephone = "EN"
                        },
                        new
                        {
                            CompanyCode = "RMT",
                            CompanyCountry = "86866668888",
                            CompanyName = "Red Maple",
                            CompanyTelephone = "CN"
                        });
                });

            modelBuilder.Entity("EFCoreBasicDemo.Infrastructure.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CompanyCode");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Country_Code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Sex");

                    b.Property<int>("StaffLevel")
                        .HasColumnType("int")
                        .HasColumnName("StaffLevel");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("CompanyCode");

                    b.ToTable("Staff", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyCode = "AC001",
                            CountryCode = "CN",
                            Description = "White Moon Light",
                            Name = "Xiaoyu",
                            Sex = "female",
                            StaffLevel = 12
                        },
                        new
                        {
                            Id = 2,
                            CompanyCode = "AC001",
                            CountryCode = "CN",
                            Description = "Software Engineer",
                            Name = "Henry",
                            Sex = "male",
                            StaffLevel = 10
                        },
                        new
                        {
                            Id = 3,
                            CompanyCode = "RMT",
                            CountryCode = "CN",
                            Description = "180+++++",
                            Name = "tony",
                            Sex = "male",
                            StaffLevel = 10
                        },
                        new
                        {
                            Id = 4,
                            CompanyCode = "RMT",
                            CountryCode = "CN",
                            Description = "Cute girl",
                            Name = "Henry",
                            Sex = "female",
                            StaffLevel = 11
                        });
                });

            modelBuilder.Entity("EFCoreBasicDemo.Infrastructure.Models.StaffExpaned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaffExpaned", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EFCoreBasicDemo.Infrastructure.Models.Staff", b =>
                {
                    b.HasOne("EFCoreBasicDemo.Infrastructure.Models.Company", "Company")
                        .WithMany("Staffs")
                        .HasForeignKey("CompanyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EFCoreBasicDemo.Infrastructure.Models.Company", b =>
                {
                    b.Navigation("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
